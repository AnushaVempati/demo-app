name: Deploy Java Demo app to Google kubernetes Engine

on: [workflow_dispatch]
  #push:
   # branches: [ "master" ]  
env:
  GKE_PROJECT: quiet-cider-377407
  GKE_CLUSTER: anusha-javademoapp-cluster
  GKE_APP_NAME: anusha-javademoapp
  GKE_SERVICE: anusha-serviceforjavademoapp
  GKE_INGRESS: anusha-ingressforjavademoapp
  GKE_SERVICE_ACCOUNT: gcptutorials-sa
  GKE_REGION: us-central1
  GKE_ZONE: us-central1-c
  GKE_TAG: test

jobs:
  Build:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'principalSet://iam.googleapis.com/projects/14628868216/locations/global/workloadIdentityPools/githubanu/*'
        service_account: gcptutorials-sa@quiet-cider-377407.iam.gserviceaccount.com@quiet-cider-377407.iam.gserviceaccount.com #$GKE_SERVICE_ACCOUNT@$GKE_PROJECT.iam.gserviceaccount.com

    - id: gen_tags
      run: |
        if [[ $GITHUB_REF == 'refs/tags/'* ]]; then
          TAGS='["user/image:latest","user/image:'${GITHUB_REF/refs\/tags\//}'"]'
        else
          TAGS='["user/image:latest"]'
        fi
        echo '::set-output name=tags::'$TAGS
    
    # Build the Docker image
    - name: Build and Push
      working-directory: ./
      run: |-  
        docker build \
         --tag $GKE_REGION-docker.pkg.dev/$GKE_PROJECT/$GKE_PROJECT/$GKE_APP_NAME:$GKE_TAG . #${{ steps.meta.outputs.tags }} .
        # .
        #--build-arg GITHUB_REF="$GITHUB_REF" \
        #--build-arg GITHUB_SHA="$GITHUB_SHA" \    
       
        gcloud auth configure-docker $GKE_REGION-docker.pkg.dev --quiet
        
        docker push $GKE_REGION-docker.pkg.dev/$GKE_PROJECT/$GKE_APP_NAME:$GKE_TAG #+ $TEST_TAG #${{ steps.meta.outputs.tags }}
  
  Deploy:
    runs-on: ubuntu-latest
    environment: prod
    needs: Build
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'principalSet://iam.googleapis.com/projects/14628868216/locations/global/workloadIdentityPools/githubanu/*'
        service_account: gcptutorials-sa@quiet-cider-377407.iam.gserviceaccount.com@quiet-cider-377407.iam.gserviceaccount.com #"$GKE_SERVICE_ACCOUNT@$GKE_PROJECT.iam.gserviceaccount.com"

    # Get the GKE credentials so we can deploy to the cluster
    - id: 'get-credentials'
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - id: 'get-pods'
      run: 'kubectl get pods'
      
    # Deploy the new Docker image to the GKE cluster
    - name: Deploy
      working-directory: ./
      run: |-
        envsubst < deployment.yml | kubectl apply -f -      
        envsubst < service.yml | kubectl apply -f -
        envsubst < ingress.yml | kubectl apply -f -
